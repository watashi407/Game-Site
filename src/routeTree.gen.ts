/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as JackpotImport } from './routes/jackpot'

// Create Virtual Routes

const TablesLazyImport = createFileRoute('/tables')()
const SlotLazyImport = createFileRoute('/slot')()
const OthersLazyImport = createFileRoute('/others')()
const NewLazyImport = createFileRoute('/new')()
const LiveLazyImport = createFileRoute('/live')()
const BingoLazyImport = createFileRoute('/bingo')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const TablesLazyRoute = TablesLazyImport.update({
  id: '/tables',
  path: '/tables',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/tables.lazy').then((d) => d.Route))

const SlotLazyRoute = SlotLazyImport.update({
  id: '/slot',
  path: '/slot',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/slot.lazy').then((d) => d.Route))

const OthersLazyRoute = OthersLazyImport.update({
  id: '/others',
  path: '/others',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/others.lazy').then((d) => d.Route))

const NewLazyRoute = NewLazyImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/new.lazy').then((d) => d.Route))

const LiveLazyRoute = LiveLazyImport.update({
  id: '/live',
  path: '/live',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/live.lazy').then((d) => d.Route))

const BingoLazyRoute = BingoLazyImport.update({
  id: '/bingo',
  path: '/bingo',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/bingo.lazy').then((d) => d.Route))

const JackpotRoute = JackpotImport.update({
  id: '/jackpot',
  path: '/jackpot',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/jackpot': {
      id: '/jackpot'
      path: '/jackpot'
      fullPath: '/jackpot'
      preLoaderRoute: typeof JackpotImport
      parentRoute: typeof rootRoute
    }
    '/bingo': {
      id: '/bingo'
      path: '/bingo'
      fullPath: '/bingo'
      preLoaderRoute: typeof BingoLazyImport
      parentRoute: typeof rootRoute
    }
    '/live': {
      id: '/live'
      path: '/live'
      fullPath: '/live'
      preLoaderRoute: typeof LiveLazyImport
      parentRoute: typeof rootRoute
    }
    '/new': {
      id: '/new'
      path: '/new'
      fullPath: '/new'
      preLoaderRoute: typeof NewLazyImport
      parentRoute: typeof rootRoute
    }
    '/others': {
      id: '/others'
      path: '/others'
      fullPath: '/others'
      preLoaderRoute: typeof OthersLazyImport
      parentRoute: typeof rootRoute
    }
    '/slot': {
      id: '/slot'
      path: '/slot'
      fullPath: '/slot'
      preLoaderRoute: typeof SlotLazyImport
      parentRoute: typeof rootRoute
    }
    '/tables': {
      id: '/tables'
      path: '/tables'
      fullPath: '/tables'
      preLoaderRoute: typeof TablesLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/jackpot': typeof JackpotRoute
  '/bingo': typeof BingoLazyRoute
  '/live': typeof LiveLazyRoute
  '/new': typeof NewLazyRoute
  '/others': typeof OthersLazyRoute
  '/slot': typeof SlotLazyRoute
  '/tables': typeof TablesLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/jackpot': typeof JackpotRoute
  '/bingo': typeof BingoLazyRoute
  '/live': typeof LiveLazyRoute
  '/new': typeof NewLazyRoute
  '/others': typeof OthersLazyRoute
  '/slot': typeof SlotLazyRoute
  '/tables': typeof TablesLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/jackpot': typeof JackpotRoute
  '/bingo': typeof BingoLazyRoute
  '/live': typeof LiveLazyRoute
  '/new': typeof NewLazyRoute
  '/others': typeof OthersLazyRoute
  '/slot': typeof SlotLazyRoute
  '/tables': typeof TablesLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/jackpot'
    | '/bingo'
    | '/live'
    | '/new'
    | '/others'
    | '/slot'
    | '/tables'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/jackpot'
    | '/bingo'
    | '/live'
    | '/new'
    | '/others'
    | '/slot'
    | '/tables'
  id:
    | '__root__'
    | '/'
    | '/jackpot'
    | '/bingo'
    | '/live'
    | '/new'
    | '/others'
    | '/slot'
    | '/tables'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  JackpotRoute: typeof JackpotRoute
  BingoLazyRoute: typeof BingoLazyRoute
  LiveLazyRoute: typeof LiveLazyRoute
  NewLazyRoute: typeof NewLazyRoute
  OthersLazyRoute: typeof OthersLazyRoute
  SlotLazyRoute: typeof SlotLazyRoute
  TablesLazyRoute: typeof TablesLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  JackpotRoute: JackpotRoute,
  BingoLazyRoute: BingoLazyRoute,
  LiveLazyRoute: LiveLazyRoute,
  NewLazyRoute: NewLazyRoute,
  OthersLazyRoute: OthersLazyRoute,
  SlotLazyRoute: SlotLazyRoute,
  TablesLazyRoute: TablesLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/jackpot",
        "/bingo",
        "/live",
        "/new",
        "/others",
        "/slot",
        "/tables"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/jackpot": {
      "filePath": "jackpot.tsx"
    },
    "/bingo": {
      "filePath": "bingo.lazy.tsx"
    },
    "/live": {
      "filePath": "live.lazy.tsx"
    },
    "/new": {
      "filePath": "new.lazy.tsx"
    },
    "/others": {
      "filePath": "others.lazy.tsx"
    },
    "/slot": {
      "filePath": "slot.lazy.tsx"
    },
    "/tables": {
      "filePath": "tables.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
